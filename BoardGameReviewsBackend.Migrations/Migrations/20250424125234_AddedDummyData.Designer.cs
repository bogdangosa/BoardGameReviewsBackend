// <auto-generated />
using System;
using BoardGameReviewsBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoardGameReviewsBackend.Migrations.Migrations
{
    [DbContext(typeof(BoardgamesDbContext))]
    [Migration("20250424125234_AddedDummyData")]
    partial class AddedDummyData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardGameReviewsBackend.Data.Models.Boardgame", b =>
                {
                    b.Property<int>("boardgameid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("boardgameid"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("nrOfPlayers")
                        .HasColumnType("integer");

                    b.Property<int?>("playTime")
                        .HasColumnType("integer");

                    b.Property<double?>("weight")
                        .HasColumnType("double precision");

                    b.HasKey("boardgameid");

                    b.ToTable("Boardgames");

                    b.HasData(
                        new
                        {
                            boardgameid = 1,
                            Category = "Abstract",
                            Description = "Decorate a palace ceiling after creating your own pattern.",
                            Image = "/azul_duel.jpg",
                            ReleaseDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Azul Duel",
                            nrOfPlayers = 2,
                            playTime = 60,
                            weight = 2.2000000000000002
                        },
                        new
                        {
                            boardgameid = 2,
                            Category = "Strategy",
                            Description = "Explore an island, discover artifacts, and defeat guardians.",
                            Image = "/lost_ruins_of_arnak.jpg",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Lost Ruins of Arnak",
                            nrOfPlayers = 1,
                            playTime = 120,
                            weight = 2.5
                        },
                        new
                        {
                            boardgameid = 3,
                            Category = "Strategy",
                            Description = "Influence, intrigue, and combat in the universe of Dune.",
                            Image = "/dune_imperium.jpg",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Dune Imperium",
                            nrOfPlayers = 1,
                            playTime = 120,
                            weight = 3.0
                        },
                        new
                        {
                            boardgameid = 4,
                            Category = "Abstract",
                            Description = "Sew a quilt, collect buttons, attract cats!",
                            Image = "/calico.jpg",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Calico",
                            nrOfPlayers = 4,
                            playTime = 45,
                            weight = 1.8
                        },
                        new
                        {
                            boardgameid = 5,
                            Category = "Cooperative",
                            Description = "Mutating diseases are spreading around the world - can your team save humanity?",
                            Image = "/pandemic_legacy.jpg",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Pandemic Legacy",
                            nrOfPlayers = 2,
                            playTime = 60,
                            weight = 3.5
                        },
                        new
                        {
                            boardgameid = 6,
                            Category = "Cooperative",
                            Description = "Complete missions in space in this cooperative trick-taking game.",
                            Image = "/the_crew.jpg",
                            ReleaseDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "The Crew",
                            nrOfPlayers = 2,
                            playTime = 30,
                            weight = 2.0
                        },
                        new
                        {
                            boardgameid = 7,
                            Category = "Family",
                            Description = "In this competitive real estate market, there's only one possible outcome: Monopoly!",
                            Image = "/monopoly.jpg",
                            ReleaseDate = new DateTime(1935, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Monopoly",
                            nrOfPlayers = 4,
                            playTime = 90,
                            weight = 1.0
                        },
                        new
                        {
                            boardgameid = 8,
                            Category = "Party",
                            Description = "Give your team clever one-word clues to help them spot their agents in the field.",
                            Image = "/codenames.jpg",
                            ReleaseDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Codenames",
                            nrOfPlayers = 4,
                            playTime = 30,
                            weight = 1.5
                        },
                        new
                        {
                            boardgameid = 9,
                            Category = "Strategy",
                            Description = "Collect and trade resources to build up the island of Catan in this modern classic.",
                            Image = "/catan.jpg",
                            ReleaseDate = new DateTime(1995, 4, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Catan",
                            nrOfPlayers = 3,
                            playTime = 90,
                            weight = 2.0
                        });
                });

            modelBuilder.Entity("BoardGameReviewsBackend.Data.Models.Review", b =>
                {
                    b.Property<int>("reviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("reviewId"));

                    b.Property<int>("boardgameId")
                        .HasColumnType("integer");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("reviewId");

                    b.HasIndex("boardgameId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BoardGameReviewsBackend.Data.Models.Review", b =>
                {
                    b.HasOne("BoardGameReviewsBackend.Data.Models.Boardgame", "boardgame")
                        .WithMany("Reviews")
                        .HasForeignKey("boardgameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("boardgame");
                });

            modelBuilder.Entity("BoardGameReviewsBackend.Data.Models.Boardgame", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
